# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET      /                                    ch.bsisa.hyperbird.controllers.Application.index
# Map static resources from the /public folder to the /assets URL path
GET      /assets/*file                        controllers.Assets.at(path="/public", file)


#######################################################################
#                     hb-api API routes                               #
#######################################################################
# TODO: suppress
GET      /api/elfin/:elfinId                  ch.bsisa.hyperbird.controllers.Api.elfin(elfinId)
# Latest proposal
GET      /api/melfin/                         ch.bsisa.hyperbird.controllers.Api.collections
GET      /api/melfin/:collectionId            ch.bsisa.hyperbird.controllers.Api.filteredCollection(collectionId, xpath ?= "//ELFIN")
GET      /api/melfin/:collectionId/:elfinId   ch.bsisa.hyperbird.controllers.Api.elfinWithinCollection(collectionId, elfinId)

# User creation must use PUT here using GET for basic test.
POST     /api/user/                           ch.bsisa.hyperbird.controllers.Api.createUser
GET      /api/user/:userName                  ch.bsisa.hyperbird.controllers.Api.findUser(userName)
PUT      /api/user/                           ch.bsisa.hyperbird.controllers.Api.updateUser
DELETE   /api/user/                           ch.bsisa.hyperbird.controllers.Api.deleteUser

#######################################################################
#                     SecureSocial Routes                             #
#######################################################################
# Login page
GET      /login                               securesocial.controllers.LoginPage.login
GET      /logout                              securesocial.controllers.LoginPage.logout

# User Registration and password handling 
GET      /signup                              securesocial.controllers.Registration.startSignUp
POST     /signup                              securesocial.controllers.Registration.handleStartSignUp
GET      /signup/:token                       securesocial.controllers.Registration.signUp(token)
POST     /signup/:token                       securesocial.controllers.Registration.handleSignUp(token)
GET      /reset                               securesocial.controllers.Registration.startResetPassword
POST     /reset                               securesocial.controllers.Registration.handleStartResetPassword
GET      /reset/:token                        securesocial.controllers.Registration.resetPassword(token)
POST     /reset/:token                        securesocial.controllers.Registration.handleResetPassword(token)
GET      /password                            securesocial.controllers.PasswordChange.page
POST     /password                            securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET      /authenticate/:provider              securesocial.controllers.ProviderController.authenticate(provider)
POST     /authenticate/:provider              securesocial.controllers.ProviderController.authenticateByPost(provider)
GET      /not-authorized                      securesocial.controllers.ProviderController.notAuthorized






